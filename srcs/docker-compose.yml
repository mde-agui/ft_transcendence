services:
  web:
    container_name: ft_transcendence
    build:
      context: .
      dockerfile: Dockerfile
    image: ft_transcendence
    ports:
      - "3000:3000"
    volumes:
      - ./data:/usr/src/app/data
      - ./certs:/usr/src/app/certs
    environment:
      - DB_PATH=/usr/src/app/data/database.db
    command: npm run dev
    networks:
      - transcendence
    restart: unless-stopped

  nginx:
    user: "0:0"
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/custom.conf:/etc/nginx/conf.d/custom.conf
      #- ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      #- ./nginx/modsec/modsecurity.conf:/etc/modsecurity.d/modsecurity.conf
      #- ./nginx/modsec/setup.conf:/etc/modsecurity.d/setup.conf
      #- ./nginx/modsec/custom_rules.conf:/etc/modsecurity.d/custom_rules.conf
      #- ./nginx/modsec/owasp-crs:/etc/modsecurity.d/owasp-crs
      - ./nginx/modsec:/etc/modsecurity.d
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/logs:/var/log/nginx
     # - ./nginx/custom-entrypoint.sh:/docker-entrypoint.sh
     # - ./nginx/includes:/etc/nginx/includes
    depends_on:
      - web
    networks:
      - transcendence
    healthcheck:
      test: ["CMD", "curl", "-f", "--insecure", "https://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  db:
    image: alpine:latest
    volumes:
      - ./data:/usr/src/app/data
    networks:
      - transcendence
    command: sh -c "apk add --no-cache sqlite && touch /usr/src/app/data/database.db && sqlite3 /usr/src/app/data/database.db 'CREATE TABLE IF NOT EXISTS test (id INTEGER PRIMARY KEY);' && tail -f /dev/null"
    healthcheck:
      test: ["CMD", "sqlite3", "/usr/src/app/data/database.db", ".tables"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

networks:
  transcendence:
    driver: bridge

volumes:
  db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data
